- alias: 'Turn on toilet ceiling lights on motion detected'
  trigger:
    entity_id: binary_sensor.toilet_presence
    platform: state
    to: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id: light.toilet_ceiling
    - service: timer.cancel
      entity_id: timer.toilet_presence

- alias: 'Turn off toilet ceiling lights when presence expires'
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.toilet_presence
  action:
    service: homeassistant.turn_off
    entity_id: light.toilet_ceiling

- alias: 'Start toilet timer when presence expires'
  trigger:
    entity_id: binary_sensor.toilet_presence
    platform: state
    to: 'off'
  action:
    service: timer.start
    entity_id: timer.toilet_presence

- alias: 'Reset toilet lights automation 20 min after it has been turned off'
  trigger:
    entity_id: automation.turn_off_toilet_ceiling_lights_when_presence_expires
    platform: state
    to: 'off'
  action:
    - delay: '00:20:00'
    - service: homeassistant.turn_on
      entity_id: automation.turn_off_toilet_ceiling_lights_when_presence_expires

- alias: 'Turn off toilet lights when the automation is reset and room is empty'
  trigger:
    entity_id: automation.turn_off_toilet_ceiling_lights_when_presence_expires
    platform: state
    to: 'on'
  condition:
    condition: state
    entity_id: binary_sensor.toilet_presence
    state: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: light.toilet_ceiling

- alias: 'Reset the toilet timer if the lights are turned of manually'
  trigger:
    entity_id: light.toilet_ceiling
    platform: state
    to: 'off'
  action:
    service: timer.cancel
    entity_id: timer.toilet_presence

- alias: 'Turn on evening lights at dusk'
  trigger:
    platform: numeric_state
    entity_id: sensor.outdoor_illuminance
    below: 500
    for:
      minutes: 5
  condition:
    condition: time
    after: '12:00:00'
    before: '22:00:00'
  action:
    service: homeassistant.turn_on
    entity_id: script.activate_evening_lights

- alias: 'Send notifications on low battery for sensors'
  trigger:
    platform: event
    event_type: state_changed
    event_data:
      domain: sensor
  condition:
    condition: template
    value_template: "{{ trigger.event.data.entity_id.endswith('battery_level') and trigger.event.data.old_state }}"
  action:
    service: notify.mobile_app_sm_g970f
    data_template:
      title: 'Batteries are running low'
      message: 'Sensor {{ trigger.event.data.old_state.name }} only has {{ trigger.event.data.new_state.state }}% of juice left.'

- alias: 'Activate morning scene for workday mornings'
  trigger:
    platform: state
    entity_id: alarm_control_panel.hemma_alarm
    to: 'disarmed'
  condition:
    - condition: template
      value_template: "{{ state_attr('alarm_control_panel.hemma_alarm', 'changed_by') == state_attr('person.person1', 'friendly_name') }}"
    - condition: state
      entity_id: binary_sensor.workday
      state: 'on'
    - condition: time
      after: '05:00:00'
      before: '06:10:00'
  action:
    - service: homeassistant.turn_on
      entity_id: scene.workday_morning

- alias: 'Increment shower counter'
  trigger:
    platform: numeric_state
    entity_id: sensor.bathroom_humidity
    above: 70
    for:
      minutes: 10
  action:
    service: counter.increment
    data:
      entity_id: counter.showers_this_week

- alias: 'Increment bath counter'
  trigger:
    platform: numeric_state
    entity_id: sensor.bathroom_humidity
    above: 60
    below: 70
    for:
      minutes: 5
  action:
    service: counter.increment
    data:
      entity_id: counter.baths_this_week

- alias: 'Reset showers/baths counters weekly'
  trigger:
    platform: time
    at: '00:00:00'
  condition:
    condition: time
    weekday:
      - mon
  action:
    - service: counter.reset
      data:
        entity_id: counter.showers_this_week
    - service: counter.reset
      data:
        entity_id: counter.baths_this_week
